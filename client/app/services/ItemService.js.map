{"version":3,"sources":["services/ItemService.ts"],"names":["ItemService","ItemService.constructor","ItemService._callAPI","ItemService.getItems","ItemService.getItem","ItemService.createItem"],"mappings":"AAAA,+CAA+C;;;;;;;;;;;;;AAE/C,mBAAqB,aAAa,CAAC,CAAA;AACnC,qBAA6C,eAAe,CAAC,CAAA;AAE7D;IAKIA,qBAA0BA,IAAIA;QAC1BC,IAAIA,CAACA,IAAIA,GAAGA,IAAIA,CAACA;QACjBA,IAAIA,CAACA,OAAOA,GAAGA,KAAKA,CAACA;IACzBA,CAACA;IAEDD,8BAAQA,GAARA,UAASA,GAAUA,EAAEA,MAAaA,EAAEA,IAAQA;QACxCE,MAAMA,CAACA,MAAMA,CAACA,KAAKA,CAACA,GAAGA,EAAEA;YACrBA,MAAMA,EAAEA,MAAMA;YACdA,OAAOA,EAAEA;gBACLA,QAAQA,EAAEA,kBAAkBA;gBAC5BA,cAAcA,EAAEA,kBAAkBA;gBAClCA,OAAOA,EAAEA,qCAAqCA;gBAC9CA,eAAeA,EAAEA,iDAAiDA;aACrEA;YACDA,IAAIA,EAAEA,IAAIA,CAACA,SAASA,CAACA,IAAIA,CAACA;SAC7BA,CAACA,CAAAA;IACNA,CAACA;IAEDF,8BAAQA,GAARA,UAASA,KAAYA;QACjBG,MAAMA,CAACA,IAAIA,CAACA,IAAIA,CAACA,GAAGA,CAACA,IAAIA,CAACA,OAAOA,GAAGA,eAAeA,GAAGA,KAAKA,CAACA,CAACA;IACjEA,CAACA;IAEDH,6BAAOA,GAAPA,UAAQA,EAASA;QACbI,MAAMA,CAACA,IAAIA,CAACA,IAAIA,CAACA,GAAGA,CAACA,IAAIA,CAACA,OAAOA,GAAGA,QAAQA,GAAGA,EAAEA,CAACA,CAACA;IACvDA,CAACA;IAEDJ,gCAAUA,GAAVA,UAAWA,SAAgBA;QACvBK,IAAIA,IAAIA,GAAGA;YACPA,YAAYA,EAAEA,SAASA;SAC1BA,CAAAA;QACDA,MAAMA,CAACA,IAAIA,CAACA,QAAQA,CAACA,IAAIA,CAACA,OAAOA,GAAGA,OAAOA,EAAEA,MAAMA,EAAEA,IAAIA,CAACA,CAACA;IAC/DA,CAACA;IApCLL;QAKgBA,WAACA,WAAMA,CAACA,WAAIA,CAACA,CAAAA;;oBAgC5BA;IAADA,kBAACA;AAADA,CArCA,AAqCCA,IAAA;AArCY,mBAAW,cAqCvB,CAAA;AAEU,8BAAsB,GAAG;IAChC,WAAW;IACX,sBAAe;CAClB,CAAC","file":"services/ItemService.js","sourcesContent":["/// <reference path=\"../../typings/tsd.d.ts\" />\n\nimport {Inject} from 'angular2/di';\nimport {Http, Headers, httpInjectables} from 'angular2/http';\n\nexport class ItemService {\n\n    http: Http;\n    baseURL: string;\n    \n    constructor(@Inject(Http) http) {\n        this.http = http;\n        this.baseURL = '/v1';\n    }\n\n    _callAPI(url:string, method:string, data:any) {\n        return window.fetch(url, {\n            method: method,\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Token': 'qaw35dRtgyhtpDdDA21vgbjmyr43474kkdj',\n                'Authorization': 'Bearer HCDbAav5VUWkUNFunGhRU41JXVT7gfxysZmLCtrx'\n            },\n            body: JSON.stringify(data)\n        })\n    }\n\n    getItems(limit:string) {\n        return this.http.get(this.baseURL + '/items?limit=' + limit);\n    }\n\n    getItem(id:string) {\n        return this.http.get(this.baseURL + '/item/' + id);\n    }\n    \n    createItem(githubURL:string) {\n        var data = {\n            'github_url': githubURL,\n        }\n        return this._callAPI(this.baseURL + '/item', 'POST', data);\n    }\n}\n\nexport let itemServiceInjectables = [\n    ItemService,\n    httpInjectables\n];\n"],"sourceRoot":"/source/"}