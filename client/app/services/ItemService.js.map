{"version":3,"sources":["services/ItemService.ts"],"names":["ItemService","ItemService.constructor","ItemService._callAPI","ItemService.getItem","ItemService.getItems","ItemService.getItemsByTag","ItemService.createItem","ItemService.createFavorite","ItemService.getFavorites"],"mappings":"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","file":"services/ItemService.js","sourcesContent":["/// <reference path=\"../../typings/tsd.d.ts\" />\n\nimport {Inject} from 'angular2/di';\nimport { Cookie } from '../common/Cookie';\n\nexport class ItemService {\n\n    baseURL: string;\n    \n    constructor() {\n        this.baseURL = '/v1';\n    }\n\n    _callAPI(url:string, method:string, data:any) {\n        return window.fetch(url, {\n            method: method,\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Token': 'qaw35dRtgyhtpDdDA21vgbjmyr43474kkdj',\n                'Authorization': 'Bearer ' + Cookie.getCookie('accessToken')\n            },\n            body: JSON.stringify(data)\n        })\n    }\n\n    getItem(id:string) {\n        var data = {};\n        return this._callAPI(this.baseURL + '/item/' + id, 'GET', data);\n    }\n\n    getItems(limit:string) {\n        var data = {};\n        return this._callAPI(this.baseURL + '/items?limit=' + limit, 'GET', data);\n    }\n\n    getItemsByTag(tagID:string, limit:string) {\n        var data = {};\n        this._callAPI(this.baseURL + '/items?limit=' + limit + '&tag_id=' + tagID, 'GET', data)\n          .then(function(response) {\n            console.log('response', response)\n          }).then(function(json) {\n            console.log('parsed json', json)\n          }).catch(function(ex) {\n            console.log('parsing failed', ex)\n          });\n    }\n\n    createItem(githubURL:string) {\n        var data = {\n            'github_url': githubURL,\n        };\n        return this._callAPI(this.baseURL + '/item', 'POST', data);\n    }\n\n    createFavorite(id:string) {\n        var data = {};\n        return this._callAPI(this.baseURL + 'favorite/' + id, 'POST', data);\n    }\n\n    getFavorites(limit:string) {\n        var data = {};\n        return this._callAPI(this.baseURL + '/favorites?limit=' + limit, 'GET', data);\n    }\n}\n\nexport let itemServiceInjectables = [\n    ItemService\n];\n"],"sourceRoot":"/source/"}