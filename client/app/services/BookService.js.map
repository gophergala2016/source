{"version":3,"sources":["services/BookService.ts"],"names":["BookService","BookService.constructor","BookService._callAPI","BookService.getBooks","BookService.getBook","BookService.updateBook","BookService.createBook","BookService.deleteBook"],"mappings":"AAAA,+CAA+C;;;;;;;;;;;;;AAE/C,mBAAqB,aAAa,CAAC,CAAA;AACnC,qBAAiE,eAAe,CAAC,CAAA;AAEjF;IAKIA,qBAA0BA,IAAIA,EAA8BA,kBAAkBA;QAC1EC,IAAIA,CAACA,IAAIA,GAAGA,IAAIA,CAACA;QACjBA,IAAIA,CAACA,OAAOA,GAAGA,YAAYA,CAACA;QAC5BA,IAAIA,CAACA,kBAAkBA,GAAGA,kBAAkBA,CAACA;IACjDA,CAACA;IAEDD,8BAAQA,GAARA,UAASA,GAAUA,EAAEA,MAAaA,EAAEA,IAAQA;QACxCE,MAAMA,CAACA,MAAMA,CAACA,KAAKA,CAACA,GAAGA,EAAEA;YACrBA,MAAMA,EAAEA,MAAMA;YACdA,OAAOA,EAAEA;gBACLA,QAAQA,EAAEA,kBAAkBA;gBAC5BA,cAAcA,EAAEA,kBAAkBA;aACrCA;YACDA,IAAIA,EAAEA,IAAIA,CAACA,SAASA,CAACA,IAAIA,CAACA;SAC7BA,CAACA,CAAAA;IACNA,CAACA;IAEDF,8BAAQA,GAARA;QACIG,MAAMA,CAACA,IAAIA,CAACA,IAAIA,CAACA,GAAGA,CAACA,IAAIA,CAACA,OAAOA,CAACA,CAACA;IACvCA,CAACA;IAEDH,6BAAOA,GAAPA,UAAQA,EAASA;QACbI,MAAMA,CAACA,IAAIA,CAACA,IAAIA,CAACA,GAAGA,CAACA,IAAIA,CAACA,OAAOA,GAAGA,GAAGA,GAAGA,EAAEA,CAACA,CAACA;IAClDA,CAACA;IAEDJ,gCAAUA,GAAVA,UAAWA,EAASA,EAAEA,IAAQA;QAC1BK,MAAMA,CAACA,IAAIA,CAACA,QAAQA,CAACA,IAAIA,CAACA,OAAOA,GAAGA,GAAGA,GAAGA,EAAEA,EAAEA,KAAKA,EAAEA,IAAIA,CAACA,CAACA;QAE3DA;;;;;;;;YAQIA;IACRA,CAACA;IAEDL,gCAAUA,GAAVA,UAAWA,IAAQA;QACfM,MAAMA,CAACA,IAAIA,CAACA,QAAQA,CAACA,IAAIA,CAACA,OAAOA,EAAEA,MAAMA,EAAEA,IAAIA,CAACA,CAACA;QAEjDA;;;;;;;;aAQKA;IACTA,CAACA;IAEDN,gCAAUA,GAAVA,UAAWA,EAASA;QAChBO,MAAMA,CAACA,IAAIA,CAACA,IAAIA,CAACA,MAAMA,CAACA,IAAIA,CAACA,OAAOA,GAAGA,GAAGA,GAAGA,EAAEA,CAACA,CAACA;IACrDA,CAACA;IA5DLP;QAKgBA,WAACA,WAAMA,CAACA,WAAIA,CAACA,CAAAA;QAAOA,WAACA,WAAMA,CAACA,yBAAkBA,CAACA,CAAAA;;oBAwD9DA;IAADA,kBAACA;AAADA,CA7DA,AA6DCA,IAAA;AA7DY,mBAAW,cA6DvB,CAAA;AAEU,8BAAsB,GAAG;IAChC,WAAW;IACX,sBAAe;CAClB,CAAC","file":"services/BookService.js","sourcesContent":["/// <reference path=\"../../typings/tsd.d.ts\" />\n\nimport {Inject} from 'angular2/di';\nimport {Http, BaseRequestOptions, Headers, httpInjectables} from 'angular2/http';\n\nexport class BookService {\n    http: Http;\n    baseURL: string;\n    baseRequestOptions: BaseRequestOptions;\n\n    constructor(@Inject(Http) http, @Inject(BaseRequestOptions) baseRequestOptions) {\n        this.http = http;\n        this.baseURL = '/api/books';\n        this.baseRequestOptions = baseRequestOptions;\n    }\n\n    _callAPI(url:string, method:string, data:any) {\n        return window.fetch(url, {\n            method: method,\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        })\n    }\n\n    getBooks() {\n        return this.http.get(this.baseURL);\n    }\n\n    getBook(id:string) {\n        return this.http.get(this.baseURL + '/' + id);\n    }\n\n    updateBook(id:string, data:any) {\n        return this._callAPI(this.baseURL + '/' + id, 'PUT', data);\n\n        /*var headers = new Headers();\n        headers.set('Content-Type', 'application/json');\n        return this.http.put(\n            this.baseURL + '/' + id,\n            JSON.stringify(data),\n            this.baseRequestOptions.merge({\n                headers: headers\n            })\n        );*/\n    }\n\n    createBook(data:any) {\n        return this._callAPI(this.baseURL, 'POST', data);\n\n        /*var headers = new Headers();\n         headers.set('Content-Type', 'application/json');\n         return this.http.post(\n            this.baseURL + '/' + id,\n            JSON.stringify(data),\n            this.baseRequestOptions.merge({\n                headers: headers\n            })\n         );*/\n    }\n\n    deleteBook(id:string) {\n        return this.http.delete(this.baseURL + '/' + id);\n    }\n}\n\nexport let bookServiceInjectables = [\n    BookService,\n    httpInjectables\n];\n"],"sourceRoot":"/source/"}