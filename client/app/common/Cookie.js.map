{"version":3,"sources":["common/Cookie.ts"],"names":["Cookie","Cookie.constructor","Cookie.getCookie","Cookie.setCookie","Cookie.deleteCookie"],"mappings":"AAAA;;;;;GAKG;AACH;IAAAA;IA0DAC,CAACA;IAxDAD;;;;;OAKGA;IACWA,gBAASA,GAAvBA,UAAwBA,IAAYA;QACnCE,IAAIA,QAAQA,GAAQA,MAAMA,CAACA;QAC3BA,IAAIA,GAAGA,QAAQA,CAACA,MAAMA,CAACA,IAAIA,CAACA,CAACA;QAC7BA,IAAIA,MAAMA,GAAGA,IAAIA,MAAMA,CAACA,MAAMA,GAAGA,IAAIA,GAAGA,OAAOA,GAAGA,IAAIA,GAAGA,gBAAgBA,EAAEA,GAAGA,CAACA,CAACA;QAChFA,IAAIA,MAAMA,GAAGA,MAAMA,CAACA,IAAIA,CAACA,QAAQA,CAACA,MAAMA,CAACA,CAACA;QAC1CA,MAAMA,CAACA,CAACA,MAAMA,KAAKA,IAAIA,CAACA,GAAGA,IAAIA,GAAGA,QAAQA,CAACA,QAAQA,CAACA,MAAMA,CAACA,CAACA,CAACA,CAACA,CAACA;IAChEA,CAACA;IAEDF;;;;;;;;OAQGA;IACWA,gBAASA,GAAvBA,UAAwBA,IAAYA,EAAEA,KAAaA,EAAEA,OAAgBA,EAAEA,IAAaA,EAAEA,MAAeA;QACpGG,IAAIA,QAAQA,GAAQA,MAAMA,CAACA;QAC3BA,IAAIA,SAASA,GAAGA,QAAQA,CAACA,MAAMA,CAACA,IAAIA,CAACA,GAAGA,GAAGA,GAAGA,QAAQA,CAACA,MAAMA,CAACA,KAAKA,CAACA,GAAGA,GAAGA,CAACA;QAE3EA,EAAEA,CAACA,CAACA,OAAOA,CAACA,CAACA,CAACA;YACbA,IAAIA,SAASA,GAAGA,IAAIA,IAAIA,CAACA,IAAIA,IAAIA,EAAEA,CAACA,OAAOA,EAAEA,GAAGA,OAAOA,GAAGA,IAAIA,GAAGA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,CAACA,CAACA;YAC/EA,SAASA,IAAIA,UAAUA,GAAGA,SAASA,CAACA,WAAWA,EAAEA,GAAGA,GAAGA,CAACA;QACzDA,CAACA;QACDA,EAAEA,CAACA,CAACA,IAAIA,CAACA,CAACA,CAACA;YACVA,SAASA,IAAIA,OAAOA,GAAGA,IAAIA,GAAGA,GAAGA,CAACA;QACnCA,CAACA;QACDA,EAAEA,CAACA,CAACA,MAAMA,CAACA,CAACA,CAACA;YACZA,SAASA,IAAIA,SAASA,GAAGA,MAAMA,GAAGA,GAAGA,CAACA;QACvCA,CAACA;QAEDA,0BAA0BA;QAC1BA,QAAQA,CAACA,MAAMA,GAAGA,SAASA,CAACA;IAC7BA,CAACA;IAEDH;;;;;;OAMGA;IACWA,mBAAYA,GAA1BA,UAA2BA,IAAYA,EAAEA,IAAaA,EAAEA,MAAeA;QACtEI,uBAAuBA;QACvBA,EAAEA,CAACA,CAACA,MAAMA,CAACA,SAASA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA;YAC5BA,MAAMA,CAACA,SAASA,CAACA,IAAIA,EAAEA,EAAEA,EAAEA,CAACA,CAACA,EAAEA,IAAIA,EAAEA,MAAMA,CAACA,CAACA;QAC9CA,CAACA;IACFA,CAACA;IAEFJ,aAACA;AAADA,CA1DA,AA0DCA,IAAA;AA1DY,cAAM,SA0DlB,CAAA","file":"common/Cookie.js","sourcesContent":["/**\n * Class Cookie - Holds static functions to deal with Cookies\n *\n *  @copyright https://github.com/BCJTI/ng2-cookies\n *\n */\nexport class Cookie {\n\n\t/**\n\t * Retrieves a single cookie by it's name\n\t *\n\t * @param  {string} name Identification of the Cookie\n\t * @returns The Cookie's value\n\t */\n\tpublic static getCookie(name: string): string {\n\t\tlet myWindow: any = window;\n\t\tname = myWindow.escape(name);\n\t\tlet regexp = new RegExp('(?:^' + name + '|;\\s*' + name + ')=(.*?)(?:;|$)', 'g');\n\t\tlet result = regexp.exec(document.cookie);\n\t\treturn (result === null) ? null : myWindow.unescape(result[1]);\n\t}\n\n\t/**\n\t * Save the Cookie\n\t *\n\t * @param  {string} name Cookie's identification\n\t * @param  {string} value Cookie's value\n\t * @param  {number} expires Cookie's expiration date in days from now. If it's undefined the cookie is a session Cookie\n\t * @param  {string} path Path relative to the domain where the cookie should be avaiable. Default /\n\t * @param  {string} domain Domain where the cookie should be avaiable. Default current domain\n\t */\n\tpublic static setCookie(name: string, value: string, expires?: number, path?: string, domain?: string) {\n\t\tlet myWindow: any = window;\n\t\tlet cookieStr = myWindow.escape(name) + '=' + myWindow.escape(value) + ';';\n\n\t\tif (expires) {\n\t\t\tlet dtExpires = new Date(new Date().getTime() + expires * 1000 * 60 * 60 * 24);\n\t\t\tcookieStr += 'expires=' + dtExpires.toUTCString() + ';';\n\t\t}\n\t\tif (path) {\n\t\t\tcookieStr += 'path=' + path + ';';\n\t\t}\n\t\tif (domain) {\n\t\t\tcookieStr += 'domain=' + domain + ';';\n\t\t}\n\n\t\t// console.log(cookieStr);\n\t\tdocument.cookie = cookieStr;\n\t}\n\n\t/**\n\t * Removes specified Cookie\n\t *\n\t * @param  {string} name Cookie's identification\n\t * @param  {string} path Path relative to the domain where the cookie should be avaiable. Default /\n\t * @param  {string} domain Domain where the cookie should be avaiable. Default current domain\n\t */\n\tpublic static deleteCookie(name: string, path?: string, domain?: string) {\n\t\t// If the cookie exists\n\t\tif (Cookie.getCookie(name)) {\n\t\t\tCookie.setCookie(name, '', -1, path, domain);\n\t\t}\n\t}\n\n}"],"sourceRoot":"/source/"}